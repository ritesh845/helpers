
//Display Word
if(!function_exists('displaywords')){
     function displaywords($number){
         $no = (int)floor($number);
         $point = (int)round(($number - $no) * 100);
         $hundred = null;
         $digits_1 = strlen($no);
         $i = 0;
         $str = array();
         $words = array('0' => '', '1' => 'one', '2' => 'two',
          '3' => 'three', '4' => 'four', '5' => 'five', '6' => 'six',
          '7' => 'seven', '8' => 'eight', '9' => 'nine',
          '10' => 'ten', '11' => 'eleven', '12' => 'twelve',
          '13' => 'thirteen', '14' => 'fourteen',
          '15' => 'fifteen', '16' => 'sixteen', '17' => 'seventeen',
          '18' => 'eighteen', '19' =>'nineteen', '20' => 'twenty',
          '30' => 'thirty', '40' => 'forty', '50' => 'fifty',
          '60' => 'sixty', '70' => 'seventy',
          '80' => 'eighty', '90' => 'ninety');
         $digits = array('', 'hundred', 'thousand', 'lakh', 'crore');
         while ($i < $digits_1) {
           $divider = ($i == 2) ? 10 : 100;
           $number = floor($no % $divider);
           $no = floor($no / $divider);
           $i += ($divider == 10) ? 1 : 2;


           if ($number) {
              $plural = (($counter = count($str)) && $number > 9) ? 's' : null;
              $hundred = ($counter == 1 && $str[0]) ? ' and ' : null;
              $str [] = ($number < 21) ? $words[$number] .
                  " " . $digits[$counter] . $plural . " " . $hundred
                  :
                  $words[floor($number / 10) * 10]
                  . " " . $words[$number % 10] . " "
                  . $digits[$counter] . $plural . " " . $hundred;
           } else $str[] = null;
        }
        $str = array_reverse($str);
        $result = implode('', $str);


        if ($point > 20) {
          $points = ($point) ?
            "" . $words[floor($point / 10) * 10] . " " . 
                $words[$point = $point % 10] : ''; 
        } else {
            $points = $words[$point];
        }
        if($points != ''){        
            echo $result . "Rupees  " . $points . " Paise Only";
        } else {

            echo $result . "Rupees Only";
        }

      }
}




if (!function_exists('file_upload')) {
    function file_upload($file, $folder, $field_name = null, $data = [])
    {
        if (!empty($data)) {
            if ($data->$field_name != null) {
                $img = str_replace('storage/', '', $data->$field_name);
                Storage::delete('public/' . $img);
            }
        }

        $name = time() . '_' . str_replace(' ', '_', $file->getClientOriginalName());
        $file->storeAs('public/' . $folder, $name);
        $path = 'storage/' . $folder . '/' . $name;

        return [
            'path' => $path,
            'name' => $file->getClientOriginalName(),
            'type' => $file->getClientOriginalExtension(),
            'size' => $file->getSize(),
        ];
    }
}


if (!function_exists('slugify')) {
    function slugify($text, string $divider = '-')
    {
        // replace non letter or digits by divider
        $text = preg_replace('~[^\pL\d]+~u', $divider, $text);
        // transliterate
        $text = iconv('utf-8', 'us-ascii//TRANSLIT', $text);
        // remove unwanted characters
        $text = preg_replace('~[^-\w]+~', '', $text);
        // trim
        $text = trim($text, $divider);
        // remove duplicate divider
        $text = preg_replace('~-+~', $divider, $text);
        // lowercase
        $text = strtolower($text);
        if (empty($text)) {
            return 'n-a';
        }
        return $text;
    }
}
if (!function_exists('thousandsCurrencyFormat')) {

    function thousandsCurrencyFormat($num)
    {
        if ($num > 1000) {
            $x = round($num);
            $x_number_format = number_format($x);
            $x_array = explode(',', $x_number_format);
            $x_parts = array('k', 'm', 'b', 't');
            $x_count_parts = count($x_array) - 1;
            $x_display = $x;
            $x_display = $x_array[0] . ((int)$x_array[1][0] !== 0 ? '.' . $x_array[1][0] : '');
            $x_display .= $x_parts[$x_count_parts - 1];
            return $x_display;
        }
        return number_format($num);
    }
}


